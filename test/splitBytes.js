var ethers = require('ethers');

const initializr = "0xb63e800d0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000160000000000000000000000000f48f2b2d2a534e402487b3ee7c18c33aec0fe5e4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000093b45518025a21611843933087157ea8af0af4af000000000000000000000000848da5ef2f79edc669ad2bdb07dee553d5963e2c0000000000000000000000000000000000000000000000000000000000000000"

const functionSelector = "0xb63e800d"
const functionSignature = "function setup(address[] calldata _owners, uint256 _threshold, address to, bytes calldata data, address fallbackHandler, address paymentToken, uint256 payment, address payable paymentReceiver)";
const numOfParams = 8; // counting array as one.

console.log(`initializr length is ${initializr.length}`);
const n = 32;

splitBytes(initializr)
splitBytes('')

console.log('93b45518025a21611843933087157ea8af0af4af000000000000000000000000'.length);

const abiCoder = new ethers.utils.AbiCoder()

console.log(abiCoder.encode(["uint"], [1]));



console.log('0000000000000000000000000000000000000000000000000000000000000000'.length);
console.log('0000000160000000000000000000000000f48f2b2d2a534e402487b3ee7c18c3'.length);

function splitBytes(bytes) {
  let chunks = [];
  let charsLength = bytes.length;
  for (let i = 10; i < charsLength; i += 64) {
    chunks.push(bytes.substring(i, i + 64));
  }
  console.log(chunks);
}


